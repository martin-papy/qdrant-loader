[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "qdrant-loader-workspace"
version = "0.6.1"
description = "A comprehensive toolkit for loading data into Qdrant vector database with MCP server support"
readme = "README.md"
authors = [
    { name = "Martin Papy", email = "martin.papy@cbtw.tech" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Indexing",
    "Environment :: Console",
    "Typing :: Typed",
]
requires-python = ">=3.12"

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://qdrant-loader.net"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "pytest-timeout>=2.3.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
    "requests>=2.28.0",
    "responses>=0.24.1",
    "requests-mock>=1.11.0",
    "sqlite-web>=0.6.4",
    "py-spy",
    "snakeviz",
    "memory-profiler",
    "prometheus-client"
]
docs = [
    "tomli>=2.0.0",
    "markdown>=3.5.0",
    "pygments>=2.15.0",
    "cairosvg>=2.7.0",
    "pillow>=10.0.0",
    "pymdown-extensions>=10.0.0",
]

[tool.setuptools.packages.find]
where = [
    "packages",
]

[tool.black]
line-length = 88
target-version = [
    "py312",
]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = [
    "qdrant_loader",
    "mcp_server",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
mypy_path = "packages/qdrant-loader/src:packages/qdrant-loader-mcp-server/src:packages/qdrant-loader-core/src"

[tool.pytest.ini_options]
testpaths = [
    "packages/*/tests",
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-v",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "requires_deps: marks tests as requiring optional dependencies",
    "workflow: marks tests that validate GitHub Actions workflow",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = [
    "packages",
    "website",
]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/site/*",
    "*/htmlcov*/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py312"
line-length = 88
extend-exclude = [
    "venv",
    "venv-*",
    "**/venv/**",
    "**/.venv/**",
    "env",
    "env-*",
]

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
]
ignore = [
    "E501",
    "B008",
    "C901",
    "B017",
    "B904",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
]
"tests/*" = [
    "B011",
    "B017",
]
